apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapi
  labels:
    app.kubernetes.io/name: webapi
    app.kubernetes.io/instance: webapi
    app.kubernetes.io/part-of: webapi
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: webapi
      app.kubernetes.io/instance: webapi
      app.kubernetes.io/part-of: webapi
  replicas: 2
  revisionHistoryLimit: 3
  template:
    metadata:
      labels:
        app.kubernetes.io/name: webapi
        app.kubernetes.io/instance: webapi
        app.kubernetes.io/part-of: webapi
    spec:
      containers:
      - name: webapi
        image: webapi.azurecr.io/webapi:325
        imagePullPolicy: Always
        env:
        - name: ASPNETCORE_URLS
          value: "http://+:80"
        - name: ASPNETCORE_ENVIRONMENT
          valueFrom:
            secretKeyRef:
              name: aspnetcore-environment
              key: ASPNETCORE_ENVIRONMENT 
        - name: MjcTemplatesWebApi__AzureKeyVault__Name
          valueFrom:
            secretKeyRef:
              name: azure-key-vault-name
              key: MjcTemplatesWebApi__AzureKeyVault__Name
        - name: MjcTemplatesWebApi__AzureServiceTokenProviderConnectionString
          valueFrom:
            secretKeyRef:
              name: azure-service-token-provider-connection-string
              key: MjcTemplatesWebApi__AzureServiceTokenProviderConnectionString
        ports:
        - containerPort: 80
          name: http
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /self
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 3
          successThreshold: 1
          timeoutSeconds: 3
        readinessProbe:
          failureThreshold: 2
          httpGet:
            path: /ready
            port: 80
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
          timeoutSeconds: 1
      restartPolicy: Always